on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Build Release

jobs:
  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: ./build.sh --nodeb

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: linbofs
          path: build/linbofs*
        
  deb-package:
    needs: build
    name: DEB-Package
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo apt update && sudo apt install debhelper -y

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: linbofs
          path: build

      - name: Build
        run: debian/mkdeb.sh

      - name: Copy artifacts
        run: mkdir archives && cp ../linuxmuster-linbo-gui7_* ./archives

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: deb-package
          path: archives/*
        
  github-release:
    needs: deb-package
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    name: GitHub Release
    runs-on: ubuntu-18.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: deb-package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        id: upload-release-assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: .

  packageserver-upload:
    name: Packageserver upload
    needs: deb-package
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Create working dir
        run: mkdir archives

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: deb-package

      - name: Set repo to experimental
        run: |
          sed -i "/^Distribution:/s/:.*/: lmn7-experimental/" ./*.changes

      - name: Copy package to lmn archive
        uses: appleboy/scp-action@master
        with:
          host: archive.linuxmuster.net
          username: dorian
          key: ${{ secrets.REPO_SSH_KEY }}
          port: 22
          source: "./*"
          target: "/srv/repo/mini-dinstall/incoming"

      - name: Publish package on lmn archive 1
        uses: appleboy/ssh-action@master
        with:
          host: archive.linuxmuster.net
          username: dorian
          key: ${{ secrets.REPO_SSH_KEY }}
          port: 22
          script: /usr/local/bin/publish-debs

      - name: Publish package on lmn archive 2
        uses: appleboy/ssh-action@master
        with:
          host: archive.linuxmuster.net
          username: dorian
          key: ${{ secrets.REPO_SSH_KEY }}
          port: 22
          script: /usr/local/bin/publish-debs
